/*
 * generated by Xtext 2.25.0
 */
package io.github.forsyde.io.serializer;

import com.google.inject.Inject;
import io.github.forsyde.io.services.MetaGrammarAccess;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class MetaSyntacticSequencer extends AbstractSyntacticSequencer {

	protected MetaGrammarAccess grammarAccess;
	protected AbstractElementAlias match_VertexTraitBoolProperty_BoolKeyword_0_0_or_BooleanKeyword_0_1;
	protected AbstractElementAlias match_VertexTraitBoolProperty_VertexTraitIntProperty_VertexTraitRealProperty_VertexTraitStringProperty_BoolKeyword_0_0_or_BooleanKeyword_0_1_or_FloatKeyword_0_0_or_IntKeyword_0_0_or_IntegerKeyword_0_1_or_StrKeyword_0_1_or_StringKeyword_0_0;
	protected AbstractElementAlias match_VertexTraitIntProperty_IntKeyword_0_0_or_IntegerKeyword_0_1;
	protected AbstractElementAlias match_VertexTraitStringProperty_StrKeyword_0_1_or_StringKeyword_0_0;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (MetaGrammarAccess) access;
		match_VertexTraitBoolProperty_BoolKeyword_0_0_or_BooleanKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getVertexTraitBoolPropertyAccess().getBoolKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getVertexTraitBoolPropertyAccess().getBooleanKeyword_0_1()));
		match_VertexTraitBoolProperty_VertexTraitIntProperty_VertexTraitRealProperty_VertexTraitStringProperty_BoolKeyword_0_0_or_BooleanKeyword_0_1_or_FloatKeyword_0_0_or_IntKeyword_0_0_or_IntegerKeyword_0_1_or_StrKeyword_0_1_or_StringKeyword_0_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getVertexTraitBoolPropertyAccess().getBoolKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getVertexTraitBoolPropertyAccess().getBooleanKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getVertexTraitIntPropertyAccess().getIntKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getVertexTraitIntPropertyAccess().getIntegerKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getVertexTraitRealPropertyAccess().getFloatKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getVertexTraitStringPropertyAccess().getStrKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getVertexTraitStringPropertyAccess().getStringKeyword_0_0()));
		match_VertexTraitIntProperty_IntKeyword_0_0_or_IntegerKeyword_0_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getVertexTraitIntPropertyAccess().getIntKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getVertexTraitIntPropertyAccess().getIntegerKeyword_0_1()));
		match_VertexTraitStringProperty_StrKeyword_0_1_or_StringKeyword_0_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getVertexTraitStringPropertyAccess().getStrKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getVertexTraitStringPropertyAccess().getStringKeyword_0_0()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_VertexTraitBoolProperty_BoolKeyword_0_0_or_BooleanKeyword_0_1.equals(syntax))
				emit_VertexTraitBoolProperty_BoolKeyword_0_0_or_BooleanKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VertexTraitBoolProperty_VertexTraitIntProperty_VertexTraitRealProperty_VertexTraitStringProperty_BoolKeyword_0_0_or_BooleanKeyword_0_1_or_FloatKeyword_0_0_or_IntKeyword_0_0_or_IntegerKeyword_0_1_or_StrKeyword_0_1_or_StringKeyword_0_0.equals(syntax))
				emit_VertexTraitBoolProperty_VertexTraitIntProperty_VertexTraitRealProperty_VertexTraitStringProperty_BoolKeyword_0_0_or_BooleanKeyword_0_1_or_FloatKeyword_0_0_or_IntKeyword_0_0_or_IntegerKeyword_0_1_or_StrKeyword_0_1_or_StringKeyword_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VertexTraitIntProperty_IntKeyword_0_0_or_IntegerKeyword_0_1.equals(syntax))
				emit_VertexTraitIntProperty_IntKeyword_0_0_or_IntegerKeyword_0_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VertexTraitStringProperty_StrKeyword_0_1_or_StringKeyword_0_0.equals(syntax))
				emit_VertexTraitStringProperty_StrKeyword_0_1_or_StringKeyword_0_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     'bool' | 'boolean'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '=' default?='true'
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_VertexTraitBoolProperty_BoolKeyword_0_0_or_BooleanKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         'int' | 
	  *         'integer' | 
	  *         'float' | 
	  *         'bool' | 
	  *         'boolean' | 
	  *         'string' | 
	  *         'str'
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_VertexTraitBoolProperty_VertexTraitIntProperty_VertexTraitRealProperty_VertexTraitStringProperty_BoolKeyword_0_0_or_BooleanKeyword_0_1_or_FloatKeyword_0_0_or_IntKeyword_0_0_or_IntegerKeyword_0_1_or_StrKeyword_0_1_or_StringKeyword_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'int' | 'integer'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '=' default=INT
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_VertexTraitIntProperty_IntKeyword_0_0_or_IntegerKeyword_0_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'string' | 'str'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '=' default=STRING
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_VertexTraitStringProperty_StrKeyword_0_1_or_StringKeyword_0_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
