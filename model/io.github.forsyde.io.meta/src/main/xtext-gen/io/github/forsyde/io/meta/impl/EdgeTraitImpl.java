/**
 * generated by Xtext 2.25.0
 */
package io.github.forsyde.io.meta.impl;

import io.github.forsyde.io.meta.EdgeTrait;
import io.github.forsyde.io.meta.EdgeTraitConstraint;
import io.github.forsyde.io.meta.MetaPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * &lt;!-- begin-user-doc --&gt;
 * An implementation of the model object '<em><b>Edge Trait</b>&lt;/em&gt;'.
 * &lt;!-- end-user-doc --&gt;
 * &lt; &gt;
 * The following features are implemented:
 * &lt;/p&gt;
 * &lt; &gt;
 *   <li>{@link io.github.forsyde.io.meta.impl.EdgeTraitImpl#getName <em>Name</em>}&lt;/li&gt;
 *   <li>{@link io.github.forsyde.io.meta.impl.EdgeTraitImpl#getRefines <em>Refines</em>}&lt;/li&gt;
 *   <li>{@link io.github.forsyde.io.meta.impl.EdgeTraitImpl#getSpecs <em>Specs</em>}&lt;/li&gt;
 * &lt;/ul&gt;
 *
 * @generated
 */
public class EdgeTraitImpl extends MinimalEObjectImpl.Container implements EdgeTrait
{
  /**
   * The default value of the '{@link #getName() <em>Name&lt;/em&gt;}' attribute.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name&lt;/em&gt;}' attribute.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getRefines() <em>Refines&lt;/em&gt;}' reference list.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #getRefines()
   * @generated
   * @ordered
   */
  protected EList<EdgeTrait> refines;

  /**
   * The cached value of the '{@link #getSpecs() <em>Specs&lt;/em&gt;}' containment reference list.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #getSpecs()
   * @generated
   * @ordered
   */
  protected EList<EdgeTraitConstraint> specs;

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  protected EdgeTraitImpl()
  {
    super();
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MetaPackage.Literals.EDGE_TRAIT;
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaPackage.EDGE_TRAIT__NAME, oldName, name));
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public EList<EdgeTrait> getRefines()
  {
    if (refines == null)
    {
      refines = new EObjectResolvingEList<EdgeTrait>(EdgeTrait.class, this, MetaPackage.EDGE_TRAIT__REFINES);
    }
    return refines;
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public EList<EdgeTraitConstraint> getSpecs()
  {
    if (specs == null)
    {
      specs = new EObjectContainmentEList<EdgeTraitConstraint>(EdgeTraitConstraint.class, this, MetaPackage.EDGE_TRAIT__SPECS);
    }
    return specs;
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MetaPackage.EDGE_TRAIT__SPECS:
        return ((InternalEList<?>)getSpecs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MetaPackage.EDGE_TRAIT__NAME:
        return getName();
      case MetaPackage.EDGE_TRAIT__REFINES:
        return getRefines();
      case MetaPackage.EDGE_TRAIT__SPECS:
        return getSpecs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MetaPackage.EDGE_TRAIT__NAME:
        setName((String)newValue);
        return;
      case MetaPackage.EDGE_TRAIT__REFINES:
        getRefines().clear();
        getRefines().addAll((Collection<? extends EdgeTrait>)newValue);
        return;
      case MetaPackage.EDGE_TRAIT__SPECS:
        getSpecs().clear();
        getSpecs().addAll((Collection<? extends EdgeTraitConstraint>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MetaPackage.EDGE_TRAIT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MetaPackage.EDGE_TRAIT__REFINES:
        getRefines().clear();
        return;
      case MetaPackage.EDGE_TRAIT__SPECS:
        getSpecs().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MetaPackage.EDGE_TRAIT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MetaPackage.EDGE_TRAIT__REFINES:
        return refines != null && !refines.isEmpty();
      case MetaPackage.EDGE_TRAIT__SPECS:
        return specs != null && !specs.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //EdgeTraitImpl
