/**
 * generated by Xtext 2.25.0
 */
package io.github.forsyde.io.meta.impl;

import io.github.forsyde.io.meta.EdgeTraitConstraint;
import io.github.forsyde.io.meta.MetaPackage;
import io.github.forsyde.io.meta.VertexTrait;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * &lt;!-- begin-user-doc --&gt;
 * An implementation of the model object '<em><b>Edge Trait Constraint</b>&lt;/em&gt;'.
 * &lt;!-- end-user-doc --&gt;
 * &lt; &gt;
 * The following features are implemented:
 * &lt;/p&gt;
 * &lt; &gt;
 *   <li>{@link io.github.forsyde.io.meta.impl.EdgeTraitConstraintImpl#isTarget <em>Target</em>}&lt;/li&gt;
 *   <li>{@link io.github.forsyde.io.meta.impl.EdgeTraitConstraintImpl#isSource <em>Source</em>}&lt;/li&gt;
 *   <li>{@link io.github.forsyde.io.meta.impl.EdgeTraitConstraintImpl#getFilter <em>Filter</em>}&lt;/li&gt;
 * &lt;/ul&gt;
 *
 * @generated
 */
public class EdgeTraitConstraintImpl extends MinimalEObjectImpl.Container implements EdgeTraitConstraint
{
  /**
   * The default value of the '{@link #isTarget() <em>Target&lt;/em&gt;}' attribute.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #isTarget()
   * @generated
   * @ordered
   */
  protected static final boolean TARGET_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isTarget() <em>Target&lt;/em&gt;}' attribute.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #isTarget()
   * @generated
   * @ordered
   */
  protected boolean target = TARGET_EDEFAULT;

  /**
   * The default value of the '{@link #isSource() <em>Source&lt;/em&gt;}' attribute.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #isSource()
   * @generated
   * @ordered
   */
  protected static final boolean SOURCE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isSource() <em>Source&lt;/em&gt;}' attribute.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #isSource()
   * @generated
   * @ordered
   */
  protected boolean source = SOURCE_EDEFAULT;

  /**
   * The cached value of the '{@link #getFilter() <em>Filter&lt;/em&gt;}' reference list.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #getFilter()
   * @generated
   * @ordered
   */
  protected EList<VertexTrait> filter;

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  protected EdgeTraitConstraintImpl()
  {
    super();
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MetaPackage.Literals.EDGE_TRAIT_CONSTRAINT;
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public boolean isTarget()
  {
    return target;
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public void setTarget(boolean newTarget)
  {
    boolean oldTarget = target;
    target = newTarget;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaPackage.EDGE_TRAIT_CONSTRAINT__TARGET, oldTarget, target));
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public boolean isSource()
  {
    return source;
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public void setSource(boolean newSource)
  {
    boolean oldSource = source;
    source = newSource;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaPackage.EDGE_TRAIT_CONSTRAINT__SOURCE, oldSource, source));
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public EList<VertexTrait> getFilter()
  {
    if (filter == null)
    {
      filter = new EObjectResolvingEList<VertexTrait>(VertexTrait.class, this, MetaPackage.EDGE_TRAIT_CONSTRAINT__FILTER);
    }
    return filter;
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MetaPackage.EDGE_TRAIT_CONSTRAINT__TARGET:
        return isTarget();
      case MetaPackage.EDGE_TRAIT_CONSTRAINT__SOURCE:
        return isSource();
      case MetaPackage.EDGE_TRAIT_CONSTRAINT__FILTER:
        return getFilter();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MetaPackage.EDGE_TRAIT_CONSTRAINT__TARGET:
        setTarget((Boolean)newValue);
        return;
      case MetaPackage.EDGE_TRAIT_CONSTRAINT__SOURCE:
        setSource((Boolean)newValue);
        return;
      case MetaPackage.EDGE_TRAIT_CONSTRAINT__FILTER:
        getFilter().clear();
        getFilter().addAll((Collection<? extends VertexTrait>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MetaPackage.EDGE_TRAIT_CONSTRAINT__TARGET:
        setTarget(TARGET_EDEFAULT);
        return;
      case MetaPackage.EDGE_TRAIT_CONSTRAINT__SOURCE:
        setSource(SOURCE_EDEFAULT);
        return;
      case MetaPackage.EDGE_TRAIT_CONSTRAINT__FILTER:
        getFilter().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MetaPackage.EDGE_TRAIT_CONSTRAINT__TARGET:
        return target != TARGET_EDEFAULT;
      case MetaPackage.EDGE_TRAIT_CONSTRAINT__SOURCE:
        return source != SOURCE_EDEFAULT;
      case MetaPackage.EDGE_TRAIT_CONSTRAINT__FILTER:
        return filter != null && !filter.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (target: ");
    result.append(target);
    result.append(", source: ");
    result.append(source);
    result.append(')');
    return result.toString();
  }

} //EdgeTraitConstraintImpl
