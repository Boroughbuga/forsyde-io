/*
 * generated by Xtext 2.25.0
 */
package io.github.forsyde.io.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import io.github.forsyde.io.meta.VertexTrait
import java.nio.file.Files
import java.nio.file.Paths
import io.github.forsyde.io.parser.antlr.MetaParser
import io.github.forsyde.io.meta.Model
import javax.inject.Inject
import com.squareup.javapoet.JavaFile

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MetaGenerator extends AbstractGenerator {
	
	@Inject
	JavaMetaGenerator javaMetaGenerator;

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		resource.contents.removeIf([e | !(e instanceof Model)]);
		val model = resource.contents.head as Model;
		javaMetaGenerator.doGenerate(model, Paths.get("."))
//		val edgeStr = JavaFile.builder('forsyde.io.java.core', javaMetaGenerator.generateEdgeTraits(model)).build.toString
//		val vertexStr = JavaFile.builder('forsyde.io.java.core', javaMetaGenerator.generateVertexTraitEnum(model)).build.toString
//		fsa.generateFile("src-gen/main/java/forsyde/io/java/core/VertexTrait.java", edgeStr);
//		fsa.generateFile("src-gen/main/java/forsyde/io/java/core/EdgeTrait.java", vertexStr);
//		Files.createDirectories(Paths.get("src-gen/main/java/forsyde/io/java/core"))
//		fsa.generateFile()
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
	}
}
