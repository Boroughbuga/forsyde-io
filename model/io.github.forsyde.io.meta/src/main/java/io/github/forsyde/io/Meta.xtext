grammar io.github.forsyde.io.Meta with org.eclipse.xtext.common.Terminals 

generate meta "http://www.github.io/forsyde/io/Meta"

Model:
	traits+=(VertexTrait|EdgeTrait)*;

VertexTrait:
	'vertex' name=ID ('refines' refines+=[VertexTrait] (',' refines+=[VertexTrait])*)? 
	 '(' (ports+=VertexTraitPort)* ')'
	 '{' (properties+=VertexTraitProperty)* '}'
;


VertexTraitProperty:
	'property' name=ID ':' type=VertexTraitPropertyType
;

VertexTraitPropertyType:
	VertexTraitIntProperty |
	VertexTraitRealProperty |
	VertexTraitBoolProperty |
	VertexTraitStringProperty |
	VertexTraitArrayProperty |
	VertexTraitObjectProperty
;


VertexTraitIntProperty:
	('int'|'integer') ('=' default=INT)?
;

VertexTraitRealProperty:
	('float'|double?='double') ('=' default=STRING)?
;

VertexTraitBoolProperty:
	('bool'|'boolean') ('=' default?='true')?
;

VertexTraitStringProperty:
	('string'|'str') ('=' default=STRING)?
;

VertexTraitArrayProperty:
	'array' '<' itemType=VertexTraitPropertyType '>'
;

VertexTraitObjectProperty:
	'object' '<' keyType=VertexTraitPropertyType ',' valueType=VertexTraitPropertyType '>'
;

VertexTraitPort:
	(multiple?='multiple')? & (ordered?='ordered')? & (direction=VertexTraitPortDirection)? 
	'port' name=ID ':' trait=[VertexTrait]
;

EdgeTrait:
	'edge' name=ID ('refines' refines+=[EdgeTrait] (',' refines+=[EdgeTrait])*)? '{' (specs+=EdgeTraitConstraint)* '}'
;

EdgeTraitConstraint:
	'constraint' (target?='target'|source?='source') filter+=[VertexTrait] ('or' filter+=[VertexTrait])* 
;

enum VertexTraitPortDirection:
	 BIDIRECTIONAL="inout" | BIDIRECTIONAL="outin" | OUTGOING="out" | OUTGOING="outgoing" | INCOMING="in" | INCOMING="incoming"
;