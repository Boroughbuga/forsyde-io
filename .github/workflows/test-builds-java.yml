# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Building Java Supporting Libraries

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
    MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
    MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
    GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
    GPG_SIGNING_PASSWORD: ${{ secrets.GPG_SIGNING_PASSWORD }}
jobs:
  test-core-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java: [1.11, 1.15]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1.4.3
      with:
        java-version: ${{ matrix.java }}
        server-id: io.github.forsyde # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build with Gradle (Unix)
      if: ${{ matrix.os != 'windows-latest' }}
      run: |
        cd ${{ github.workspace }}/java/core
        ./gradlew build
    - name: Build with Gradle (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        cd ${{ github.workspace }}\java\core
        .\gradlew.bat jar
  test-amalthea-build:
      strategy:
        matrix:
          os: [ubuntu-latest, macos-latest, windows-latest]
          java: [1.11, 1.15]
      runs-on: ${{ matrix.os }}
      steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ matrix.java }}
          server-id: io.github.forsyde # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Build with Gradle (Unix)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          cd ${{ github.workspace }}/java/amalthea
          ./gradlew build
      - name: Build with Gradle (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          cd ${{ github.workspace }}\java\amalthea
          .\gradlew.bat jar
  test-sdf3-build:
      strategy:
        matrix:
          os: [ubuntu-latest, macos-latest, windows-latest]
          java: [1.11, 1.15]
      runs-on: ${{ matrix.os }}
      steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ matrix.java }}
          server-id: io.github.forsyde # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Build with Gradle (Unix)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          cd ${{ github.workspace }}/java/sdf3
          ./gradlew build
      - name: Build with Gradle (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          cd ${{ github.workspace }}\java\sdf3
          .\gradlew.bat build


