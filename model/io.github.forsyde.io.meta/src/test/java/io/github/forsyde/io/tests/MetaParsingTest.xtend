/*
 * generated by Xtext 2.25.0
 */
package io.github.forsyde.io.tests

import com.google.inject.Inject
import io.github.forsyde.io.meta.Model
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import io.github.forsyde.io.generator.JavaMetaGenerator

@ExtendWith(InjectionExtension)
@InjectWith(MetaInjectorProvider)
class MetaParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Inject
	JavaMetaGenerator javaMetaGenerator;
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			vertex ReactorElement () {}
			
			vertex ReactorTimer refines ReactorElement () {
				property period_numerator_per_sec: int
				property period_denominator_per_sec: int = 1				
			}
			
			vertex ReactorActor refines ReactorElement (
				multiple port children: ReactorElement
				multiple port timers: ReactorTimer
			)
			{
			 				
			}
			
			edge ReactorConnection {
				constraint source ReactorElement
				constraint target ReactorElement				
			}
			
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
		val enumStr = javaMetaGenerator.generateVertexTraitEnum(result).toString 
		println(enumStr)
	}
}
