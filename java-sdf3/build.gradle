/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'java'
    id 'idea'
    id 'eclipse'
    // id 'io.github.gradle-nexus.publish-plugin' version '1.0.0'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    mavenCentral()
}

// due to how maven central works, the groupId must be the same as the
// website which we host
group = 'io.github.forsyde'
archivesBaseName = rootProject.name + '-' + project.name
version = rootProject.version

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.2'

    api project(':common-java')
}


java {
    withSourcesJar()
    // taken away javadoc since the authors do not provide any
    // java implementation for it
    withJavadocJar()
}

jar {
    archiveFileName = archivesBaseName + '.jar'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
            pom {
                name = 'ForSyDe IO Java SDF3 Adapter'
                description = 'ForSyDe IO Java (+JVM) Amalthea Adapter'
                url = 'https://github.com/forsyde/forsyde-io'
                packaging = 'jar'
                scm {
                    connection = 'scm:git:https://github.com/forsyde/forsyde-io.git'
                    developerConnection = 'scm:git:git@github.com:forsyde/forsyde-io.git'
                    url = 'https://github.com/forsyde/forsyde-io'
                }
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://choosealicense.com/licenses/mit/'
                    }
                }
                developers {
                    developer {
                        id = 'Jordao'
                        name = 'Rodolfo Jordao'
                        email = 'jordao@kth.se'
                    }
                }
            }
        }
    }
}


test {
    useJUnit()
    maxHeapSize = '1G'
}


signing {
  // small hack to work offline or online
  if (project.hasProperty('signing.keyId')) {
    useGpgCmd()
  } else {
    useInMemoryPgpKeys(
      System.getenv('GPG_SIGNING_KEY') ?: findProperty('signing.key'),
      System.getenv('GPG_SIGNING_PASSWORD') ?: findProperty('signing.password') ?: '' //default to an empty password
    )
  }
  sign publishing.publications.mavenJava
  sign configurations.archives
}