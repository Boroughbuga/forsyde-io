/**
 * generated by Xtext 2.25.0
 */
package io.github.forsyde.io.meta.impl;

import io.github.forsyde.io.meta.MetaPackage;
import io.github.forsyde.io.meta.VertexTraitRealProperty;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * &lt;!-- begin-user-doc --&gt;
 * An implementation of the model object '<em><b>Vertex Trait Real Property</b>&lt;/em&gt;'.
 * &lt;!-- end-user-doc --&gt;
 * &lt; &gt;
 * The following features are implemented:
 * &lt;/p&gt;
 * &lt; &gt;
 *   <li>{@link io.github.forsyde.io.meta.impl.VertexTraitRealPropertyImpl#isDouble <em>Double</em>}&lt;/li&gt;
 *   <li>{@link io.github.forsyde.io.meta.impl.VertexTraitRealPropertyImpl#getDefault <em>Default</em>}&lt;/li&gt;
 * &lt;/ul&gt;
 *
 * @generated
 */
public class VertexTraitRealPropertyImpl extends VertexTraitPropertyTypeImpl implements VertexTraitRealProperty
{
  /**
   * The default value of the '{@link #isDouble() <em>Double&lt;/em&gt;}' attribute.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #isDouble()
   * @generated
   * @ordered
   */
  protected static final boolean DOUBLE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDouble() <em>Double&lt;/em&gt;}' attribute.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #isDouble()
   * @generated
   * @ordered
   */
  protected boolean double_ = DOUBLE_EDEFAULT;

  /**
   * The default value of the '{@link #getDefault() <em>Default&lt;/em&gt;}' attribute.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #getDefault()
   * @generated
   * @ordered
   */
  protected static final String DEFAULT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDefault() <em>Default&lt;/em&gt;}' attribute.
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @see #getDefault()
   * @generated
   * @ordered
   */
  protected String default_ = DEFAULT_EDEFAULT;

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  protected VertexTraitRealPropertyImpl()
  {
    super();
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MetaPackage.Literals.VERTEX_TRAIT_REAL_PROPERTY;
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public boolean isDouble()
  {
    return double_;
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public void setDouble(boolean newDouble)
  {
    boolean oldDouble = double_;
    double_ = newDouble;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaPackage.VERTEX_TRAIT_REAL_PROPERTY__DOUBLE, oldDouble, double_));
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public String getDefault()
  {
    return default_;
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public void setDefault(String newDefault)
  {
    String oldDefault = default_;
    default_ = newDefault;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaPackage.VERTEX_TRAIT_REAL_PROPERTY__DEFAULT, oldDefault, default_));
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MetaPackage.VERTEX_TRAIT_REAL_PROPERTY__DOUBLE:
        return isDouble();
      case MetaPackage.VERTEX_TRAIT_REAL_PROPERTY__DEFAULT:
        return getDefault();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MetaPackage.VERTEX_TRAIT_REAL_PROPERTY__DOUBLE:
        setDouble((Boolean)newValue);
        return;
      case MetaPackage.VERTEX_TRAIT_REAL_PROPERTY__DEFAULT:
        setDefault((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MetaPackage.VERTEX_TRAIT_REAL_PROPERTY__DOUBLE:
        setDouble(DOUBLE_EDEFAULT);
        return;
      case MetaPackage.VERTEX_TRAIT_REAL_PROPERTY__DEFAULT:
        setDefault(DEFAULT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MetaPackage.VERTEX_TRAIT_REAL_PROPERTY__DOUBLE:
        return double_ != DOUBLE_EDEFAULT;
      case MetaPackage.VERTEX_TRAIT_REAL_PROPERTY__DEFAULT:
        return DEFAULT_EDEFAULT == null ? default_ != null : !DEFAULT_EDEFAULT.equals(default_);
    }
    return super.eIsSet(featureID);
  }

  /**
   * &lt;!-- begin-user-doc --&gt;
   * &lt;!-- end-user-doc --&gt;
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (double: ");
    result.append(double_);
    result.append(", default: ");
    result.append(default_);
    result.append(')');
    return result.toString();
  }

} //VertexTraitRealPropertyImpl
