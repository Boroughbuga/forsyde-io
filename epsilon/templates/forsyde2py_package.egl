[%
var enumTemplate := TemplateFactory.load('templates/forsyde2py_enum.egl');
var classTemplate := TemplateFactory.load('templates/forsyde2py_class.egl');
%]
[*Here starts the actual template*]
[%if(package.eClassifiers.exists(e : ForSyDe!EEnum | true)) {%]
from enum import Enum
[%}%]
import lxml.etree as etree
[%for (imp in package.getImports()) { %]
from [%=imp.getPackagePath()%] import *
[%}%]

etree.register_namespace('ForSyDe', 'https://forsyde.github.io/ForSyDe')

_namespaces = {
[%for (pack in package.getAllParentsAndSelf()) {%]
    '[%=pack.nsPrefix%]': '[%=pack.nsUri%]'
[%}%]
}

[%for (enum in package.eClassifiers.select(e : ForSyDe!EEnum | true)) {%]
[%enumTemplate.populate('enum', enum);%]
[%=enumTemplate.process()%]
[%}%]

[%for (class in package.getClassesSorted()) {  %]
[%classTemplate.populate('class', class);%]
[%=classTemplate.process()%]
[%}%]
[*Here it finishes*]
[%

operation ForSyDe!EPackage getClassesSorted() : Sequence {
    var sorted = new Sequence;
    for(class in package.getEClassifiers().select(f : ForSyDe!EClass | true)) {
        sorted = addClassSorted(class, sorted);
    }
    return sorted;
}

operation addClassSorted(class : ForSyDe!EClass, sorted: Sequence) : Sequence {
    if (sorted.exists(c : ForSyDe!EClass | c.eSuperTypes.isDefined() and c.eSuperTypes.contains(class))) {
        var newSorted = new Sequence;
        newSorted.add(class);
        newSorted.addAll(sorted);
        return newSorted;
    } else {
        sorted.add(class);
        return sorted;
    }
}

@cached
operation ForSyDe!EPackage getPackageChildren() : Sequence {
    var seq = new Sequence;
    for (child in self.getESubpackages()) {
        seq.add(child);
        seq.addAll(child.getPackageChildren());
    }
    return seq;
}

@cached
operation ForSyDe!EClass getFeatures() : OrderedSet {
    var features = new OrderedSet;
    for(super in self.eSuperTypes) {
        features.addAll(super.getFeatures());
    }
    features.addAll(self.eStructuralFeatures);
    return features;
}

@cached
operation ForSyDe!EPackage getImports() : Set {
	var imp = new Set;
	for (class in self.getClassesSorted()) { 
		for (ref in class.getFeatures().select(a : ForSyDe!EReference | true)) {
			if (ref.getEReferenceType().getEPackage() <> self) {
			    imp.add(ref.getEReferenceType().getEPackage());
			}
		}
	}
	return imp;
}

@cached
operation ForSyDe!EPackage getPackagePath() : String {
    if (self.getESuperPackage().isDefined()) {
        return self.getESuperPackage().getPackagePath() + "." + self.name;
    } else {
    	return self.name;
    }
}

@cached
operation ForSyDe!EPackage getAllParentsAndSelf() : Set {
	var set : Set;
	if (self.getESuperPackage().isDefined()) {
        set = self.getESuperPackage().getAllParentsAndSelf();
    } else {
    	set = new Set;
    }
    set.add(self);
    return set;
}
%]