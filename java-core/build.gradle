import forsyde.io.java.generator.GenerateForSyDeModelTask

project.ext.niceName = "Java Core"

/*
task clearForSyDeModel(type: Delete) {
    delete 'src-gen/main/java/forsyde/io/java/core', 'src-gen/main/java/forsyde/io/java/typed/viewers'
}
*/

tasks.register('generateForSyDeModel', GenerateForSyDeModelTask) {
//  inputs.property('inputModelJson',file('./meta.json'))
//  inputs.property('rootOutDir', file('.'))
}

//tasks.generateForSyDeModel.dependsOn clearForSyDeModel
tasks.compileJava.dependsOn generateForSyDeModel
//tasks.sourcesJar.dependsOn generateForSyDeModel


tasks.register('getVersion') {
    doFirst {
        println version
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    //implementation 'org.slf4j:slf4j-api:1.7.32'
    api group: 'org.jgrapht', name: 'jgrapht-core', version: '1.5.1'
    api group: 'org.jgrapht', name: 'jgrapht-io', version: '1.5.1'
    // these two are intrusive results of lingua franca
    //implementation 'org.eclipse.xtend:org.eclipse.xtend.lib:2.25.0'
    //implementation 'commons-cli:commons-cli:1.5.0'

    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.2'

    compileOnly "org.derive4j:derive4j-annotation:1.1.1"
    annotationProcessor "org.derive4j:derive4j:1.1.1"

}

sourceSets {
    main {
        java {
            srcDirs += ['src-gen/main/java']
        }
    }
}
