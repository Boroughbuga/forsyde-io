//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.12.09 at 03:43:10 PM CET 
//


package forsyde.io.java.adapters.xmi;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * &lt; &gt;Java class for IntMapVertexPropertyDefault complex type.
 * 
 * &lt; &gt;The following schema fragment specifies the expected content contained within this class.
 * 
 * &lt; &gt;
 * &lt;complexType name="IntMapVertexPropertyDefault"&gt;
 *   &lt;   &gt;
 *     &lt;extension base="{forsyde.io.trait.hierarchy}VertexPropertyDefault"&gt;
 *       &lt;       &gt;
 *         &lt;element name="indexes" type="{http://www.w3.org/2001/XMLSchema}int" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="values" type="{forsyde.io.trait.hierarchy}VertexPropertyDefault" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * &lt;/pre&gt;
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "IntMapVertexPropertyDefault", propOrder = {
    "indexes",
    "values"
})
public class IntMapVertexPropertyDefault
    extends VertexPropertyDefault
{

    @XmlElement(type = Integer.class)
    protected List<Integer> indexes;
    protected List<VertexPropertyDefault> values;

    /**
     * Gets the value of the indexes property.
     * 
     * &lt; &gt;
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a set&lt;/CODE&gt; method for the indexes property.
     * 
     * &lt; &gt;
     * For example, to add a new item, do as follows:
     * &lt; &gt;
     *    getIndexes().add(newItem);
     * &lt;/pre&gt;
     * 
     * 
     * &lt; &gt;
     * Objects of the following type(s) are allowed in the list
     * {@link Integer }
* @return Integer
     * 
     * 
     */
    public List<Integer> getIndexes() {
        if (indexes == null) {
            indexes = new ArrayList<Integer>();
        }
        return this.indexes;
    }

    /**
     * Gets the value of the values property.
     * 
     * &lt; &gt;
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a set&lt;/CODE&gt; method for the values property.
     * 
     * &lt; &gt;
     * For example, to add a new item, do as follows:
     * &lt; &gt;
     *    getValues().add(newItem);
     * &lt;/pre&gt;
     * 
     * 
     * &lt; &gt;
     * Objects of the following type(s) are allowed in the list
     * {@link VertexPropertyDefault }
* @return VertexPropertyDefault
     * 
     * 
     */
    public List<VertexPropertyDefault> getValues() {
        if (values == null) {
            values = new ArrayList<VertexPropertyDefault>();
        }
        return this.values;
    }

}
